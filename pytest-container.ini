# Pytest configuration for container tests
[tool:pytest]
testpaths = tests/test_container.py
python_files = test_container.py
python_classes = Test*
python_functions = test_*

# Markers for different test categories
markers =
    performance: Performance benchmark tests (slower)
    startup: Container startup tests
    transports: Multi-transport functionality tests
    security: Security configuration tests
    integration: Integration and scenario tests

# Timeout for individual tests
timeout = 300

# Show verbose output
addopts = 
    -v
    --tb=short
    --strict-markers
    --strict-config
    --disable-warnings
    
# Container-specific options
junit_family = xunit2
junit_logging = all

# Logging configuration for container tests
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Capture output
capture = no

# Parallel execution settings (if pytest-xdist is installed)
# Note: Container tests may not be suitable for parallel execution
# due to Docker resource conflicts
# -n auto

# Filter warnings for cleaner output
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*urllib3.*:InsecureRequestWarning